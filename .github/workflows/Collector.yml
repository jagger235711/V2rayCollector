name: Collector
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

env:
  # 输入文件配置
  RESOURCE_DIR: $GITHUB_WORKSPACE/resource
  # INPUT_SUBLIST: $GITHUB_WORKSPACE/resource/subList.csv
  # INPUT_CHANNELS: $GITHUB_WORKSPACE/resource/channels.csv
  
  # 输出目录配置
  RESOULTS_DIR: $GITHUB_WORKSPACE/results
  # OUTPUT_MIXED: $GITHUB_WORKSPACE/results/mixed.txt
  # OUTPUT_TESTED: $GITHUB_WORKSPACE/results/mixed_tested.json
  
  # 工具路径配置

  TOOLS_DIR: $GITHUB_WORKSPACE/tool
  # SPEEDTEST_TOOL: $GITHUB_WORKSPACE/tool/speedTest_singtools/singtools
  # SPEEDTEST_CONFIG: $GITHUB_WORKSPACE/tool/speedTest_singtools/config.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Delete old Releases and Workflows
        uses: ophub/delete-releases-workflows@main
        with:
          gh_token: ${{secrets.GITHUB_TOKEN}}
          delete_releases: true
          releases_keep_latest: 3
          delete_tags: true
          delete_workflows: true
          workflows_keep_day: 3

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cleanup results directory
        run: |
          rm -rf ${{ env.RESOULTS_DIR }}/*
          mkdir -p ${{ env.RESOULTS_DIR }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deduplicate URLs
        run: |
          python deduplicate.py ${{ env.RESOURCE_DIR }}/subList.csv ${{ env.RESOURCE_DIR }}/subList.csv
          echo "去重完成，处理了 $(wc -l < ${{ env.RESOURCE_DIR }}/subList.csv) 个URL"
          python deduplicate.py ${{ env.RESOURCE_DIR }}/channels.csv ${{ env.RESOURCE_DIR }}/channels.csv
          echo "去重完成，处理了 $(wc -l < ${{ env.RESOURCE_DIR }}/channels.csv) 个URL"
          echo "备份文件:"
          ls -la ${{ env.RESOURCE_DIR }}/*.bak

      - name: Run Scrapy spider
        run: |
          cd myproject
          scrapy crawl telegram_crawler -L ERROR

      - name: Start subconverter and process URLs
        run: |
          echo "=== 容器挂载调试开始 ==="
          echo "当前工作目录: $(pwd)"
          echo "宿主机挂载源目录: ${{ env.RESOULTS_DIR }}"
          echo "容器内部目标目录: /subconverter/results"
          docker run -d --name subconverter_container --restart=always \
            -v ${{ env.RESOULTS_DIR }}:/subconverter/results \
            -p 25500:25500 \
            asdlokj1qpi23/subconverter:latest
          docker exec subconverter_container sh -c "ls -laR /subconverter"
          echo "=== 容器挂载调试结束 ==="

          # 确认subconverter程序已启动
          echo "等待subconverter容器启动..."
          MAX_RETRY=30
          COUNT=0
          while [ $COUNT -lt $MAX_RETRY ]; do
              if curl -s http://localhost:25500 >/dev/null; then
                  echo "Subconverter服务已就绪"
                  break
              fi
              sleep 1
              COUNT=$((COUNT+1))
          done
          if [ $COUNT -eq $MAX_RETRY ]; then
              echo "ERROR: Subconverter未在30秒内启动，终止流程"
              exit 1
          fi
          
          RESOURCE_FILE="${{ env.RESOURCE_DIR }}/subList.csv"
          if [ -f "$RESOURCE_FILE" ]; then
            MAX_PER_BATCH=5
            RESULT_FILE="${{ env.RESOULTS_DIR }}/mixed_base64.txt"
            > "$RESULT_FILE"
            readarray -t links < $RESOURCE_FILE

            # 表头不算在内
            for ((i=0; i<${#links[@]}; i+=$MAX_PER_BATCH))
            do
                batch=("${links[@]:i:$MAX_PER_BATCH}")
                batch_url=$(IFS='|'; echo "${batch[*]}")
                current_url="http://0.0.0.0:25500/sub?target=mixed&url=$batch_url"

                echo "Processing batch $((i/$MAX_PER_BATCH + 1)) with URL: $current_url"
                temp_response=$(mktemp -p ${{ env.RESOULTS_DIR }})

                # 新增详细日志记录
                echo ">>> 发送请求到 $current_url 临时文件: $temp_response"
                if curl -fs -o "$temp_response" -L "$current_url"; then
                    status=$?
                    case $status in
                        0)   echo "请求成功" ;;
                        6)   echo "无法解析主机" ;;
                        7)   echo "无法连接到主机" ;;
                        28)  echo "请求超时" ;;
                        56)  echo "接收数据失败" ;;
                        *)   echo "未知错误: $status" ;;
                    esac
                fi

                DELAY=0
                while [ ! -s "$temp_response" ]; do
                    echo "响应内容为空，等待 $DELAY 秒后重试..."
                    sleep $DELAY
                    DELAY=$((DELAY + 1))
                    if [ $DELAY -gt 10 ]; then
                        echo "重试次数过多，跳过批次"
                        rm -f "$temp_response"
                        continue 2
                    fi
                done

                cat "$temp_response" >> "$RESULT_FILE"
                rm -f "$temp_response"
                echo "批次成功处理"
                # 加个延迟，太快了subconverter反应不过来
                sleep 2 
            done
          else
            echo "subList.csv not found"
            exit 1
          fi

      - name: Decode base64 and append to mixed.txt
        run: |
          echo "工作路径: $GITHUB_WORKSPACE"
          echo "当前路径: $(pwd)"
          echo "----------------"
          ls -R $GITHUB_WORKSPACE
          echo "----------------"
          base64 -d ${{ env.RESOULTS_DIR }}/mixed_base64.txt >> ${{ env.RESOULTS_DIR }}/mixed.txt

      - name: Clean mixed.txt content
        run: |
          if [ ! -f "${{ env.RESOULTS_DIR }}/mixed.txt" ]; then exit 1; fi
          cat "${{ env.RESOULTS_DIR }}/mixed.txt" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed '/^$/d' > "${{ env.RESOULTS_DIR }}/mixed.txt.tmp"
          mv "${{ env.RESOULTS_DIR }}/mixed.txt.tmp" "${{ env.RESOULTS_DIR }}/mixed.txt"
          echo "清理后统计：$(wc -l ${{ env.RESOULTS_DIR }}/mixed.txt) 行 $(wc -c ${{ env.RESOULTS_DIR }}/mixed.txt) 字节"

      - name: Speedtest
        run: |
          if [ ! -f "${{ env.RESOULTS_DIR }}/mixed.txt" ]; then exit 1; fi
          chmod +x ${{ env.TOOLS_DIR }}/speedTest_singtools/singtools
          ${{ env.TOOLS_DIR }}/speedTest_singtools/singtools test -i ${{ env.RESOULTS_DIR }}/mixed.txt -c ${{ env.TOOLS_DIR }}/speedTest_singtools/config.json -o ${{ env.RESOULTS_DIR }}/mixed_tested.json -e fatal -f ""
          if [ ! -f "${{ env.RESOULTS_DIR }}/mixed_tested.json" ]; then exit 1; fi

      - name: Convert to mixed with base64encode
        run: |
          if [ ! -f "${{ env.RESOULTS_DIR }}/mixed_tested.json" ]; then exit 1; fi
          full_url="http://localhost:25500/sub?target=mixed&url=/subconverter/results/mixed_tested.json"
          echo "正在请求: $full_url"
          if ! curl -v -o ${{ env.RESOULTS_DIR }}/mixed_tested.txt "$full_url"; then
            echo "curl failed: $(docker exec subconverter_container ls -l /subconverter/results)"
            exit 1
          fi
          if [ ! -s "${{ env.RESOULTS_DIR }}/mixed_tested.txt" ]; then exit 1; fi

      - name: Commit Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git pull origin main
          git add ${{ env.RESOULTS_DIR }}/*
          git commit -m "✔️ $(date '+%Y-%m-%d %H:%M:%S') Collected" || echo "No changes to commit"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
